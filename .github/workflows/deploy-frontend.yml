name: Vocali Frontend Develop Deployment

env:
  NODE_OPTIONS: --max-old-space-size=6144

on:
  push:
    branches: [develop]
    paths: ['frontend/**']
  workflow_dispatch:

jobs:
  deploy_frontend_develop:
    name: Deploy frontend develop branch
    runs-on: ubuntu-24.04
    environment: develop
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend application
        working-directory: ./frontend
        run: npm run generate
        env:
          NUXT_PUBLIC_API_BASE: ${{ vars.BACKEND_URL }}
          NUXT_PUBLIC_APP_NAME: 'iVocal'
          NUXT_PUBLIC_ENVIRONMENT: 'develop'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy to S3
        working-directory: ./frontend
        run: aws s3 sync .output/public/ s3://${{ vars.S3_FRONTEND_BUCKET }} --delete --cache-control max-age=31536000,public

      - name: Invalidate CloudFront (if configured)
        run: |
          if [ -n "${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
            echo "‚úÖ CloudFront invalidation created"
          else
            echo "‚ö†Ô∏è CloudFront distribution ID not configured, skipping invalidation"
          fi

      - name: Deployment complete
        run: |
          echo "üöÄ Frontend deployed successfully to develop!"
          echo "üåê S3 URL: http://${{ vars.S3_FRONTEND_BUCKET }}.s3-website.${{ vars.AWS_REGION }}.amazonaws.com"
